[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'vim-jp/autofmt'

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'Shirk/vim-gas'

[[plugins]]
repo = 'chrisbra/vim-zsh'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
on_if = '!has("nvim")'

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'vim-jp/syntax-vim-ex'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'

[[plugins]]
repo = 'leafOfTree/vim-vue-plugin'
hook_add = '''
  let g:vim_vue_plugin_config = {
    \'syntax': {
    \    'template': ['html'],
    \    'script': ['typescript'],
    \    'style': ['css'],
    \},
    \'full_syntax': [],
    \'initial_indent': [],
    \'attribute': 0,
    \'keyword': 0,
    \'foldexpr': 0,
    \'debug': 0,
    \}
'''

[[plugins]]
repo = 'rbtnn/vim-vimscript_indentexpr'

[[plugins]]
repo = 'jiangmiao/auto-pairs'
hook_add = '''
  let g:AutoPairsFlyMode = 1
'''

[[plugins]]
repo = 'tpope/vim-scriptease'

[[plugins]]
repo = 'liuchengxu/space-vim-theme'
hook_add = '''
  let g:space_vim_transp_bg = 1
'''

[[plugins]]
repo = 'ap/vim-buftabline'

[[plugins]]
repo = 'andymass/vim-matchup'

#[[plugins]]
#repo = 'tpope/vim-sleuth'

[[plugins]]
repo = 'numToStr/Comment.nvim'
hook_add = '''
  lua require('Comment').setup()
'''

[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
  nmap <silent>gx <Cmd>call GithubOrOpenBrowser('n')<CR>
  xmap <silent>gx <Cmd>call GithubOrOpenBrowser('v')<CR>

  function! GetGithubOwnerRepo(mode)
    " TODO: vimrc#get_last_selected doesn't return the right text
    " vimrc#get_in_quotes works just fine though, so this is low priority
    let selected = a:mode ==# 'n' ? vimrc#get_in_quotes() : vimrc#get_last_selected()
    let col = getcurpos()[2]
    if match(selected, '\c^[a-z0-9_.-]\+/[a-z0-9_.-]\+$') != -1 &&
          \ (a:mode ==# 'v' || (
          \ match(getline('.'), selected) < col &&
          \ matchend(getline('.'), selected) >= col - 1))
      return 'https://github.com/' . selected
    endif
    return ''
  endfunction

  " If hovering/selecting owner/repo, treat it as a github url
  function! GithubOrOpenBrowser(mode)
    let github_uri = GetGithubOwnerRepo(a:mode)
    if !empty(github_uri)
      call openbrowser#open(github_uri)
    else
      call openbrowser#_keymap_smart_search(a:mode)
    endif
  endfunction
'''

#[[plugins]]
#repo = 'pangloss/vim-javascript'
##on_ft = ['javascript', 'javascriptreact']
#on_ft = 'javascript'

#[[plugins]]
#repo = 'leafgarland/typescript-vim'
##on_ft = ['typescript', 'typescriptreact']
#on_ft = 'typescript'

#[[plugins]]
#repo = 'MaxMEllon/vim-jsx-pretty'
#on_ft = 'javascriptreact'

#[[plugins]]
#repo = 'peitalin/vim-jsx-typescript'
#on_ft = 'typescriptreact'

#[[plugins]]
#repo = 'styled-components/vim-styled-components'
#on_ft = ['javascript', 'typescript', 'javascriptreact', 'typescriptreact']

#[[plugins]]
#repo = 'jparise/vim-graphql'
#on_ft = [
#  'javascript', 'typescript', 'javascriptreact', 'typescriptreact', 'graphql'
#]
#merge_ftdetect = 'v:true'
