#!/usr/bin/env bash

declare -A hook_vars

_disable_shader() {
	hook_vars[shader]=$(hyprshade current)
	hyprshade off
}
_restore_shader() {
	if [ -n "${hook_vars[shader]:-}" ]; then
		hyprshade on "${hook_vars[shader]}"
	fi
}

# NOTE: This apparently removes a black border seen around screenshots
# https://github.com/hyprwm/contrib/blob/16884001b26e6955ff4b88b4dfe4c8986e20f153/grimblast/grimblast#L219-L224
_disable_fade() {
	hook_vars[hyprland_fade]=$(hyprctl -j animations | jq -jr '.[0][] | select(.name == "fade") | .name, ",", (if .enabled == true then "1" else "0" end), ",", (.speed|floor), ",", .bezier')
	hook_vars[hyprland_fade_out]=$(hyprctl -j animations | jq -jr '.[0][] | select(.name == "fadeOut") | .name, ",", (if .enabled == true then "1" else "0" end), ",", (.speed|floor), ",", .bezier')
	hyprctl keyword animation 'fade,0,1,default' >/dev/null
	hyprctl keyword animation 'fadeOut,0,1,default' >/dev/null
}
_restore_fade() {
	if [ -n "${hook_vars[hyprland_fade]:-}" ]; then
		hyprctl keyword animation "${hook_vars[hyprland_fade]}" >/dev/null
	fi
	if [ -n "${hook_vars[hyprland_fade_out]:-}" ]; then
		hyprctl keyword animation "${hook_vars[hyprland_fade_out]}" >/dev/null
	fi
}

preScreenshot() {
	_disable_fade
	_disable_shader
}

postScreenshot() {
	_restore_shader
	_restore_fade
}

runHook() {
	"$@" || true
}
