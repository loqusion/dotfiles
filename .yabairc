#!/usr/bin/env bash

# load script addons {{{
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa
# }}}

# config: global {{{
yabai -m config mouse_follows_focus off
yabai -m config focus_follows_mouse off
yabai -m config window_origin_display default
yabai -m config window_placement second_child
yabai -m config window_topmost off
yabai -m config window_shadow on
yabai -m config window_opacity off
# yabai -m config window_opacity_duration      0.0
yabai -m config active_window_opacity 1.0
yabai -m config normal_window_opacity 0.9
yabai -m config window_border off
yabai -m config window_border_width 6
yabai -m config active_window_border_color 0xff775759
yabai -m config normal_window_border_color 0xff555555
yabai -m config insert_feedback_color 0xaad75f5f
yabai -m config split_ratio 0.50
yabai -m config auto_balance off
yabai -m config mouse_modifier fn
yabai -m config mouse_action1 move
yabai -m config mouse_action2 resize
yabai -m config mouse_drop_action swap

# general space settings
gap=12
yabai -m config layout bsp
yabai -m config top_padding $gap
yabai -m config bottom_padding $gap
yabai -m config left_padding $gap
yabai -m config right_padding $gap
yabai -m config window_gap 8
# }}}

# config: spaces {{{
# spaces=(
# 	media
# 	social
# 	web
# 	code
# 	notes
# 	mail
# 	float
# )
# }}}

# config: apps to assign to spaces {{{
# shellcheck disable=SC2034
social=(
	Discord
	Element
	Slack
)
# shellcheck disable=SC2034
media=(
	Spotify
	VLC
)
# shellcheck disable=SC2034
web=(
	Safari
	Chrome
	Brave
	Firefox
	Cypress
)
# shellcheck disable=SC2034
code=(
	kitty
	deno
)
# shellcheck disable=SC2034
notes=(
	Notion
	Obsidian
)
# shellcheck disable=SC2034
mail=(
	Spark
	'Spark Desktop'
	Mail
	Messages
)
# shellcheck disable=SC2034
float=()
# }}}

# create spaces that don't exist {{{
# current_number_of_spaces="$(yabai -m query --displays | jq '.[0].spaces | length')"
# spaces_to_create="$((${#spaces[@]} - current_number_of_spaces))"
# for ((i = 0; i < spaces_to_create; i++)); do
# 	yabai -m space --create
# done
# }}}

# label spaces & assign apps to spaces {{{
# for ((i = 0; i < ${#spaces}; i++)); do
# 	space="${spaces[$i]}"
# 	yabai -m space $((i + 1)) --label "$space"
# for app in "${!space}"; do
# 	yabai -m rule --add app="^${app}$" space="$space" manage=on
# done
# done
# }}}

# config: unmanaged apps {{{
unmanaged=(
	ExpressVPN
)
# }}}

# unmanage apps {{{
for app in "${unmanaged[@]}"; do
	yabai -m rule --add app="^${app}$" manage=off
done
# }}}

# config: space specific {{{
# yabai -m config --space social layout stack
# yabai -m config --space notes layout stack
# yabai -m config --space mail layout stack
# yabai -m config --space float layout float
# }}}

# config: grid {{{
yabai -m rule --add app='^Dash$' title!='^(General|Downloads|Docsets|Web Search|Integration|Snippets|License)$' grid=9:5:1:1:3:7
yabai -m rule --add app='^GitHub Desktop$' grid=9:5:1:1:3:7
# }}}

# signals {{{
# shellcheck disable=SC2016
yabai -m signal --add event=window_destroyed active=yes action='yabai -m query --windows --window &>/dev/null || yabai -m window --focus mouse &>/dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &>/dev/null'
# }}}

# https://github.com/koekeishiya/yabai/wiki/Tips-and-tricks#auto-updating-from-head-via-brew
# YABAI_CERT=yabai-cert sh -c "$(cat ~/.config/yabai/scripts/update-yabai.sh)"

echo 'yabai configuration loaded..'

# vim:foldmethod=marker:foldlevel=0
